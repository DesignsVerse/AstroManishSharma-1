"use client";

import { useLanguage } from '@/contexts/LanguageContext';
import { globalContent as enContent } from '@/data/globalContent/en';
import { globalContent as hiContent } from '@/data/globalContent/hi';
import Header from '@/components/Header';
import Footer from '@/components/Footer';
import { Button } from '@/components/ui/button';
import { Card, CardContent } from '@/components/ui/card';
import { Sparkles, Star, Award, Users, BookOpen, MessageCircle, Quote, Globe, Home, Shield, CalendarDays, Cross } from 'lucide-react';
import { useEffect, useRef } from 'react';
import { motion, useAnimation, useInView } from 'framer-motion';

interface AnimatedSectionProps {
  children: React.ReactNode;
  className?: string;
}

interface AnimatedCardProps {
  children: React.ReactNode;
  delay?: number;
}

export default function About() {
  const { language } = useLanguage();
  const content = language === 'en' ? enContent : hiContent;

  // Temple strengths data
  const templeStrengths = language === 'en' ? [
    "One of only three Baglamukhi Siddhpeeths in the world",
    "Ancient temple with powerful spiritual energy",
    "Expert guidance from Pandit Manish Sharma",
    "Special rituals for victory over enemies",
    "Unique Navratri celebrations with rare traditions",
    "Situated on the banks of Lakshmana River"
  ] : [
    "рджреБрдирд┐рдпрд╛ рдореЗрдВ рдХреЗрд╡рд▓ рддреАрди рдмрдЧрд▓рд╛рдореБрдЦреА рд╕рд┐рджреНрдзрдкреАрдареЛрдВ рдореЗрдВ рд╕реЗ рдПрдХ",
    "рд╢рдХреНрддрд┐рд╢рд╛рд▓реА рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдКрд░реНрдЬрд╛ рд╡рд╛рд▓рд╛ рдкреНрд░рд╛рдЪреАрди рдордВрджрд┐рд░",
    "рдкрдВрдбрд┐рдд рдордиреАрд╖ рд╢рд░реНрдорд╛ рд╕реЗ рд╡рд┐рд╢реЗрд╖рдЬреНрдЮ рдорд╛рд░реНрдЧрджрд░реНрд╢рди",
    "рд╢рддреНрд░реБрдУрдВ рдкрд░ рд╡рд┐рдЬрдп рдХреЗ рд▓рд┐рдП рд╡рд┐рд╢реЗрд╖ рдЕрдиреБрд╖реНрдард╛рди",
    "рдЕрдиреЛрдЦреА рдкрд░рдВрдкрд░рд╛рдУрдВ рдХреЗ рд╕рд╛рде рдирд╡рд░рд╛рддреНрд░рд┐ рдЙрддреНрд╕рд╡",
    "рд▓рдХреНрд╖реНрдордгрд╛ рдирджреА рдХреЗ рддрдЯ рдкрд░ рд╕реНрдерд┐рдд"
  ];

  // Astrological services data
  const astroServices = language === 'en' ? [
    "Vedic Astrology Predictions",
    "Kundli Analysis & Remedies",
    "Vastu Shastra Consultations",
    "Numerology Guidance",
    "Palm Reading",
    "Gemstone Recommendations",
    "Muhurta Selection",
    "Horoscope Matching"
  ] : [
    "рд╡реИрджрд┐рдХ рдЬреНрдпреЛрддрд┐рд╖ рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгрд┐рдпрд╛рдБ",
    "рдХреБрдВрдбрд▓реА рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдФрд░ рдЙрдкрд╛рдп",
    "рд╡рд╛рд╕реНрддреБ рд╢рд╛рд╕реНрддреНрд░ рдкрд░рд╛рдорд░реНрд╢",
    "рдЕрдВрдХ рдЬреНрдпреЛрддрд┐рд╖ рдорд╛рд░реНрдЧрджрд░реНрд╢рди",
    "рд╣рд╕реНрддрд░реЗрдЦрд╛ рд╡рд┐рдЬреНрдЮрд╛рди",
    "рд░рддреНрди рд╕реБрдЭрд╛рд╡",
    "рдореБрд╣реВрд░реНрдд рдЪрдпрди",
    "рдХреБрдВрдбрд▓реА рдорд┐рд▓рд╛рди"
  ];

  const stats = [
    { value: "10+", label: language === 'en' ? "Years of Devotion" : "рднрдХреНрддрд┐ рдХреЗ рд╡рд░реНрд╖", icon: CalendarDays },
    { value: "5000+", label: language === 'en' ? "Blessed Devotees" : "рдЖрд╢реАрд░реНрд╡рд╛рдж рдкреНрд░рд╛рдкреНрдд рднрдХреНрдд", icon: Users },
    { value: "4.9", label: language === 'en' ? "Devotee Rating" : "рднрдХреНрдд рд░реЗрдЯрд┐рдВрдЧ", icon: Star },
    { value: "15+", label: language === 'en' ? "Spiritual Awards" : "рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдкреБрд░рд╕реНрдХрд╛рд░", icon: Award }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-b from-[#f5f5f5] to-[#e8e8e8] text-[#1a1a1a] relative overflow-hidden">
      {/* Cosmic Background */}
      <div className="absolute inset-0 overflow-hidden opacity-10">
        {[...Array(20)].map((_, i) => (
          <motion.div
            key={i}
            className="absolute text-[#F0DF20]"
            style={{
              top: `${Math.random() * 100}%`,
              left: `${Math.random() * 100}%`,
              fontSize: `${1 + Math.random() * 1}rem`
            }}
            animate={{
              y: [0, -15, 0],
              opacity: [0.1, 0.3, 0.1],
              scale: [0.5, 0.7, 0.5]
            }}
            transition={{
              duration: 3 + Math.random() * 2,
              repeat: Infinity,
              ease: "easeInOut",
              delay: Math.random() * 2
            }}
          >
            {['тШЙ', 'тШ╜', 'ЁЯХЙ', 'хНР', 'тЪб', 'ЁЯМЯ'][i % 6]}
          </motion.div>
        ))}
      </div>

      <Header />
      
      <main className="pt-24 sm:pt-28">
        {/* Spiritual Introduction Section */}
        <section className="py-16 sm:py-20 relative z-10">
          <div className="container mx-auto px-4 sm:px-6 lg:px-8">
            <div className="grid lg:grid-cols-2 gap-12 items-center">
              <motion.div 
                className="relative"
                initial={{ opacity: 0, x: -50 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.8 }}
              >
                <div className="absolute -inset-6 bg-gradient-to-r from-[#F0DF20]/10 to-[#F5C742]/10 rounded-3xl blur-lg"></div>
                <img
                  src="/maa-baglamukhi-temple.jpg"
                  alt="Maa Baglamukhi Temple"
                  className="relative z-10 w-full rounded-2xl shadow-xl border-4 border-[#F0DF20]"
                />
              </motion.div>
              
              <motion.div 
                initial={{ opacity: 0, x: 50 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.8 }}
                className="space-y-6"
              >
                <div className="inline-flex items-center bg-[#F0DF20]/10 px-6 py-3 rounded-xl border border-[#F0DF20]/20">
                  <Sparkles className="w-6 h-6 text-[#F0DF20] mr-3" />
                  <span className="text-[#F0DF20] font-semibold text-lg">
                    {language === 'en' ? 'Divine Connection' : 'рджрд┐рд╡реНрдп рд╕рдВрдмрдВрдз'}
                  </span>
                </div>
                
                <h1 className="text-4xl sm:text-5xl font-bold text-[#1a1a1a] font-serif leading-tight">
                  {language === 'en' ? 'Pandit Manish Sharma' : 'рдкрдВрдбрд┐рдд рдордиреАрд╖ рд╢рд░реНрдорд╛'}
                </h1>
                
                <h2 className="text-2xl text-[#F0DF20] font-serif">
                  {language === 'en' 
                    ? 'Resident Priest, Maa Baglamukhi Temple, Nalkheda' 
                    : 'рдорд╛рдБ рдмрдЧрд▓рд╛рдореБрдЦреА рдордВрджрд┐рд░, рдирд▓рдЦреЗрдбрд╝рд╛ рдХреЗ рдкреБрдЬрд╛рд░реА'}
                </h2>
                
                <p className="text-lg text-[#1a1a1a]/90 leading-relaxed">
                  {language === 'en' 
                    ? "From childhood, I have learned Vedic havan and tantra-mantra worship at the ashram in Maa Baglamukhi Temple. With deep devotion to Maa Baglamukhi, I have been performing havan, pujan and rituals for devotees' wishes for over 10 years. As the saying goes - 'No one leaves Baglamukhi's door empty-handed'." 
                    : "рдореИрдВ рдкрдВрдбрд┐рдд рдордиреАрд╖ рд╢рд░реНрдорд╛ рд╕рд░реНрд╡ рд╕рд┐рджреНрдз рдкреАрда рдорд╛рдВ рдмрдЧрд▓рд╛рдореБрдЦреА рдордВрджрд┐рд░ рдирд▓рдЦреЗрдбрд╝рд╛ рд╕реЗ рдореИрдВ рдмрдЪрдкрди рд╕реЗ рд╣реА рдорд╛рддрд╛ рд░рд╛рдиреА рдХреЗ рдкреНрд░рд╛рдВрдЧрдг рдореЗрдВ рд╕реНрдерд┐рдд рдЖрд╢реНрд░рдо рд╕реЗ рд╡реИрджрд┐рдХ рд╣рд╡рди рдПрд╡рдВ рддрдВрддреНрд░-рдордВрддреНрд░ рдкреВрдЬрд╛ рд╕реАрдЦреА рд╣реИ рдПрд╡рдВ рдЙрдирдХрд╛ рдЧрд╣рди рдЕрдзреНрдпрдпрди рдХрд┐рдпрд╛ рдФрд░ рд╢реБрд░реБрдЖрдд рд╕реЗ рд╣реА рдорд╛рддрд╛ рд░рд╛рдиреА рдХреЗ рдкреНрд░рддрд┐ рдЖрд╕реНрдерд╛ рдПрд╡рдВ рдЕрдЯреВрдЯ рд╡рд┐рд╢реНрд╡рд╛рд╕ рд╣реЛрдиреЗ рдХреЗ рд╕рд╛рде рд╣реА рдореИрдВрдиреЗ рдЕрдкрдиреЗ рдХрд╛рд░реНрдп рдХрд░реНрдордХрд╛рдВрдб рдПрд╡рдВ рд╣рд╡рди рдкреВрдЬрди рдЕрдиреБрд╖реНрдард╛рди рдХреЛ рдорд╛рддрд╛ рд░рд╛рдиреА рдХреЗ рджрд░рдмрд╛рд░ рдореЗрдВ рдЙрдиреНрд╣реАрдВ рдХреЗ рдЖрд╢реАрд░реНрд╡рд╛рдж рд╕реЗ рдкреНрд░рд╛рд░рдВрдн рдХрд┐рдпрд╛ рд╣реИ рдмрдЧрд▓рд╛рдореБрдЦреА рдкрдВрдбрд┐рдд рдХреЗ рд░реВрдк рдореЗрдВред рдмреНрд░рд╛рд╣реНрдордг рдХреБрд▓ рдореЗрдВ рдЬрдиреНрдо рд▓реЗрдиреЗ рдХреЗ рдирд╛рддреЗ рдпрд╣ рдХрд╛рд░реНрдп рдореБрдЭреЗ рд╡рд┐рд░рд╛рд╕рдд рдореЗрдВ рднреА рдорд┐рд▓рд╛ рд╣реИ рдореИрдВ рдкрд┐рдЫрд▓реЗ 10 рд╡рд░реНрд╖реЛрдВ рд╕реЗ рдпрдЬрдорд╛рди рдХреА рдордиреЛрдХрд╛рдордирд╛ рдХреЛ рдкреВрд░реНрдг рдХрд░рдиреЗ рд╣реЗрддреБ рд╣рд╡рди рдкреВрдЬрди рдПрд╡рдВ рдЕрдиреБрд╖реНрдард╛рди рдХрд╛ рдХрд╛рд░реНрдп рдХрд░ рд░рд╣рд╛ рд╣реВрдВ рдорд╛рдБ рдмрдЧрд▓рд╛рдореБрдЦреА рдкреВрдЬрд╛ рдХреЗ рд╕рд╛рдеред рдорд╛рддрд╛ рд░рд╛рдиреА рдХреЗ рдЖрд╢реАрд░реНрд╡рд╛рдж рд╕реЗ рд╕рднреА рдпрдЬрдорд╛рдиреЛ рдХреА рдордиреЛрдХрд╛рдордирд╛ рднреА рдорд╛рдБ рдмрдЧрд▓рд╛рдореБрдЦреА рдордВрджрд┐рд░ рдореЗрдВ рдкреВрд░реНрдг рд╣реЛ рд░рд╣реА рд╣реИред рдПрдХ рдХрд╣рд╛рд╡рдд рдкреНрд░рд╕рд┐рджреНрдз рд╣реИ рдХреА *рдмрдЧрд▓рд╛ рджреНрд╡рд╛рд░реЗ рдЬреЛ рднреА рдЖрддрд╛ рдЦрд╛рд▓реА рд╣рд╛рде рдХреЛрдИ рдирд╣реАрдВ рдЬрд╛рддрд╛*ред рд╣рдо рдорд╛рддрд╛ рд░рд╛рдиреА рдорд╛рдВ рдмрдЧрд▓рд╛рдореБрдЦреА рдХрд╛ рдЖрд╢реАрд░реНрд╡рд╛рдж рдкреНрд░рд╛рдкреНрдд рд╣реИрдВред рдЬрдп рдорд╛рдВ рдмрдЧрд▓рд╛рдореБрдЦреА рд╣рдореЗрд╢рд╛ рд╕рднреА рдкрд░ рдмрдиреА рд░рд╣реЗред"}
                </p>
                
                <div className="grid grid-cols-2 gap-4">
                  {stats.map((stat, i) => (
                    <motion.div
                      key={i}
                      initial={{ opacity: 0, y: 20 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ delay: i * 0.1 }}
                      className="bg-white/90 p-4 rounded-xl border border-[#F0DF20]/20 shadow-sm"
                    >
                      <div className="flex items-center">
                        <stat.icon className="w-6 h-6 text-[#F0DF20] mr-2" />
                        <div>
                          <p className="text-2xl font-bold text-[#1a1a1a]">{stat.value}</p>
                          <p className="text-sm text-[#1a1a1a]/80">{stat.label}</p>
                        </div>
                      </div>
                    </motion.div>
                  ))}
                </div>
              </motion.div>
            </div>
          </div>
        </section>

        {/* Temple Significance Section */}
        <section className="py-16 bg-gradient-to-b from-[#f1f1f1] to-[#f9f9f9]">
          <div className="container mx-auto px-4 sm:px-6 lg:px-8">
            <AnimatedSection className="text-center mb-16">
              <div className="inline-flex items-center bg-[#F0DF20]/10 px-6 py-3 rounded-xl border border-[#F0DF20]/20">
                <Home className="w-6 h-6 text-[#F0DF20] mr-3" />
                <span className="text-[#F0DF20] font-semibold text-lg">
                  {language === 'en' ? 'Sacred Siddhpeeth' : 'рдкрд╡рд┐рддреНрд░ рд╕рд┐рджреНрдзрдкреАрда'}
                </span>
              </div>
              <h2 className="text-3xl sm:text-4xl font-bold text-[#1a1a1a] mt-6 font-serif">
                {language === 'en' 
                  ? 'Maa Baglamukhi Temple, Nalkheda' 
                  : 'рдорд╛рдБ рдмрдЧрд▓рд╛рдореБрдЦреА рдордВрджрд┐рд░, рдирд▓рдЦреЗрдбрд╝рд╛'}
              </h2>
            </AnimatedSection>

            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
              {templeStrengths.map((strength, i) => (
                <AnimatedCard key={i} delay={i * 0.1}>
                  <Card className="bg-white/90 border border-[#F0DF20]/20 hover:border-[#F0DF20]/40 h-full">
                    <CardContent className="p-6 flex items-start space-x-4">
                      <Shield className="w-8 h-8 text-[#F0DF20] mt-1 flex-shrink-0" />
                      <p className="text-lg font-serif">{strength}</p>
                    </CardContent>
                  </Card>
                </AnimatedCard>
              ))}
            </div>
          </div>
        </section>

        

        {/* Call to Action */}
        <section className="py-16 bg-gradient-to-r from-[#F0DF20] to-[#F5C742]">
          <div className="container mx-auto px-4 sm:px-6 lg:px-8 text-center">
            <h2 className="text-3xl sm:text-4xl font-bold text-white mb-6 font-serif">
              {language === 'en' 
                ? 'Seek Divine Guidance Today' 
                : 'рдЖрдЬ рд╣реА рджрд┐рд╡реНрдп рдорд╛рд░реНрдЧрджрд░реНрд╢рди рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ'}
            </h2>
            <p className="text-xl text-white/90 mb-8 max-w-3xl mx-auto font-serif">
              {language === 'en' 
                ? 'Connect with the divine energy of Maa Baglamukhi for solutions to your problems'
                : 'рдЕрдкрдиреА рд╕рдорд╕реНрдпрд╛рдУрдВ рдХреЗ рд╕рдорд╛рдзрд╛рди рдХреЗ рд▓рд┐рдП рдорд╛рдБ рдмрдЧрд▓рд╛рдореБрдЦреА рдХреА рджрд┐рд╡реНрдп рдКрд░реНрдЬрд╛ рд╕реЗ рдЬреБрдбрд╝реЗрдВ'}
            </p>
            <Button className="bg-white hover:bg-gray-100 text-[#1a1a1a] font-semibold px-8 py-4 rounded-xl shadow-lg text-lg">
              <MessageCircle className="w-6 h-6 mr-3" />
              {language === 'en' ? 'Book Consultation' : 'рдкрд░рд╛рдорд░реНрд╢ рдмреБрдХ рдХрд░реЗрдВ'}
            </Button>
          </div>
        </section>
      </main>

      <Footer />
    </div>
  );
}

const AnimatedSection = ({ children, className = '' }: AnimatedSectionProps) => {
  const ref = useRef(null);
  const isInView = useInView(ref, { once: true, margin: "-100px" });
  const controls = useAnimation();

  useEffect(() => {
    if (isInView) {
      controls.start({ opacity: 1, y: 0 });
    }
  }, [isInView, controls]);

  return (
    <motion.div
      ref={ref}
      initial={{ opacity: 0, y: 50 }}
      animate={controls}
      transition={{ duration: 0.6 }}
      className={className}
    >
      {children}
    </motion.div>
  );
};

const AnimatedCard = ({ children, delay = 0 }: AnimatedCardProps) => {
  const ref = useRef(null);
  const isInView = useInView(ref, { once: true, margin: "-50px" });
  const controls = useAnimation();

  useEffect(() => {
    if (isInView) {
      controls.start({ opacity: 1, y: 0 });
    }
  }, [isInView, controls]);

  return (
    <motion.div
      ref={ref}
      initial={{ opacity: 0, y: 30 }}
      animate={controls}
      transition={{ duration: 0.6, delay }}
    >
      {children}
    </motion.div>
  );
};